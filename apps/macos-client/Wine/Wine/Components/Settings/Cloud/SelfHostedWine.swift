//
//  SelfHostedWine.swift
//  Wine
//
//  Created by Alen Alex on 24/06/25.
//

import SwiftUI

struct SelfHostedWine: View {
    
    @Binding var selfHostedConfiguration : WineServerSettings;
    @State var selfhostedWineViewModel : SelfHostedWineViewModel = SelfHostedWineViewModel();
    
    private var urlStringProxy : Binding<String> {
        return Binding(get: {
           return self.selfHostedConfiguration.serverAddress.absoluteString
        }, set: {
            guard let urlString = URL(string: $0) else {
                self.selfhostedWineViewModel.lastServerAddressErrorMessage = "Invalid URL";
                return
            }
            self.selfHostedConfiguration.serverAddress = urlString;
        })
    }
    
    var body: some View {
        VStack {
            SettingsGroup {
                HStack {
                    Image(systemName: "opticaldisc")
                    VStack(alignment: .leading) {
                        Text("Server address").fontWeight(.medium)
                        Text("Valid HTTP(s) url to connect to the self hosted wine server").font(.callout).foregroundColor(.secondary)
                    }
                    Spacer()
                    TextField("https://wine.example.com", text: urlStringProxy)
                        .textFieldStyle(RoundedBorderTextFieldStyle())
                        .border(selfhostedWineViewModel.lastServerAddressErrorMessage != nil ? Color.red : Color.clear, width: 1)
                        
                }
                
                Divider()
                HStack {
                    Spacer()
                    Text("The server address is used to connect to the Wine server.")
                }.padding(.top, 4)
            }
            
            SettingsGroup {
                HStack {
                    Image(systemName: "key.fill")
                    VStack(alignment: .leading) {
                        Text("Secure token").fontWeight(.medium)
                        Text("A valid token generated by the self hosted wine instance").font(.callout).foregroundColor(.secondary)
                    }
                    Spacer()
                    SecureField("Secure token", text: $selfHostedConfiguration.secureToken)
                }
                
                Divider()
                HStack {
                    Spacer()
                    Text("The server address is used to connect to the Wine server.")
                }.padding(.top, 4)
            }
        }
    }
}

#Preview {
    SelfHostedWine(selfHostedConfiguration: Binding.constant(WineServerSettings()))
}
